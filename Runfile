require "runfile-tasks"
require 'filewatcher'

require_relative 'lib/victor'

title   "Victor Developer Toolbelt"
summary "Runfile tasks for building the Victor gem"
version Victor::VERSION

RunfileTasks::RubyGems.all 'victor'
RunfileTasks::Testing.rspec

command "examples"

usage 'watch [--dev]'
help 'Watch example files and rerun them on change'
option '--dev', 'Watch the dev folder instead of the examples folder'
action :watch do |args|
  folder = args['--dev'] ? 'dev' : 'examples'
  glob = "#{folder}/*.rb"
  
  say_status :watch, glob

  Filewatcher.new(glob).watch do |filename, event|
    say_status event, filename
    next if event == :delete

    Dir.chdir folder do
      filename = File.basename filename
      run "ruby #{filename}"
    end
  end
end

help 'Regenerate all SVG examples'
action :build do
  say_status :invoke, :build
  File.delete *Dir['examples/*.svg']
  Dir.chdir 'examples' do
    Dir['*.rb'].each do |filename|
      run "ruby #{filename}"
      abort "Aborting" unless $?.success?
    end
  end
  say_status :done, :build
  
end

help "Generate readme for examples folder"
action :readme do
  say_status :invoke, 'examples'

  result = ["# Examples\n"]
  Dir['examples/*.rb'].each do |file|
    say_status :process, file

    basename = File.basename file, '.rb'
    title = basename.tr '_', ' '
    code  = File.read(file).strip
    if File.exist? "examples/#{basename}.svg"
      image = "[![#{basename}](#{basename}.svg)](#{basename}.svg)"
    else
      image = false
    end

    result.push "## #{title}\n"
    result.push "```ruby"
    result.push code
    result.push "```\n"
    if image
      result.push "[View Source Ruby File](#{basename}.rb) | [View Image](#{basename}.svg)\n"
    else
      result.push "[View Source Ruby File](#{basename}.rb)\n"
    end
    result.push image if image
    result.push "\n"
  end

  result.push "\n---\n"
  result.push "This file was generated automatically with `run examples readme`."

  result = result.join "\n"
  File.write 'examples/README.md', result
  say_status :write, 'examples/README.md'
end

endcommand

help   "Run YARD server"
action :yard do
  run "yard server -p3000 -B0.0.0.0 -r"
end

help   "Generate TOC to toc.txt"
action :toc do
  run! 'gh-md-toc README.md > toc.txt'
end

help   "Generate changelog and append old changelog"
action :changelog do
  run "git changelog --save"
  # append older changelog (prior to switching to git-changelog)
  run "cat .changelog.old.md >> CHANGELOG.md"
end

require_relative 'debug.rb' if File.exist? 'debug.rb'

